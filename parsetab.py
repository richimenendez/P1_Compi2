
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BAND BLEFT BNOT BOR BRIGHT BXOR DERLLAVE DERPAR DESIGUAL DIGUAL DIV DOUBLE DP ID IGUAL INTEGER IZQLLAVE IZQPAR MAYOR MAYORIGUAL MENOR MENORIGUAL MULTI NOT OR PCOMA PORCENTAJE RESTA STR SUMA SXOR VAR abs array char exit float goto if int main print read unset xor\n        ltag : ltag tag linst\n             | tag linst\n     linst       :   linst  inst PCOMA\n                    | inst PCOMA  inst        :   asignacion\n                    |   iff\n                    |   jump\n                    |   printt\n                    |   ext\n                    |   uns\n        uns     :   unset IZQPAR va DERPAR\n    asignacion  :   var2 IGUAL expvar2        :   VAR arr\n                 |   VARtag         :   ID DP\n                    |  main DPjump        :   goto IDiff         :   if IZQPAR exp DERPAR goto IDprintt     :   print IZQPAR va DERPARext     :   exitexp         : expa\n                    | expl\n                    | expra\n                    | expb\n                    | casteo\n                    | E\n                    | calls\n    \n        casteo      : IZQPAR int DERPAR E\n                    | IZQPAR float DERPAR E\n                    | IZQPAR char DERPAR E\n    \n        calls       :  read IZQPAR DERPAR\n                    |  array IZQPAR DERPAR\n    expl        : NOT E\n                    | E AND E\n                    | E OR E\n                    | E xor Eexpra        : E DIGUAL E\n                    | E DESIGUAL E\n                    | E MAYORIGUAL E\n                    | E MENORIGUAL E\n                    | E MAYOR E\n                    | E MENOR Eexpb        : BNOT E\n                    | E BAND E\n                    | E BOR E\n                    | E BXOR E\n                    | E BLEFT E\n                    | E BRIGHT Eexpa        : E SUMA E\n                    | E RESTA E\n                    | E MULTI E\n                    | RESTA E\n                    | abs IZQPAR E DERPAR\n                    | E DIV EE           : ent\n                    | dou\n                    | va\n                    | str\n    \n        ent : INTEGER\n    \n        dou : DOUBLE\n    \n        str : STR\n    \n        va : VAR arr\n            | VAR \n    \n        arr : arr IZQLLAVE E DERLLAVE\n            | IZQLLAVE E DERLLAVE\n    '
    
_lr_action_items = {'ID':([0,1,6,16,23,25,33,119,],[3,3,-2,28,-1,-4,-3,125,]),'main':([0,1,6,23,25,33,],[4,4,-2,-1,-4,-3,]),'$end':([1,6,23,25,33,],[0,-2,-1,-4,-3,]),'if':([2,5,6,21,22,23,25,33,],[15,15,15,-15,-16,15,-4,-3,]),'goto':([2,5,6,21,22,23,25,33,90,],[16,16,16,-15,-16,16,-4,-3,119,]),'print':([2,5,6,21,22,23,25,33,],[17,17,17,-15,-16,17,-4,-3,]),'exit':([2,5,6,21,22,23,25,33,],[18,18,18,-15,-16,18,-4,-3,]),'unset':([2,5,6,21,22,23,25,33,],[19,19,19,-15,-16,19,-4,-3,]),'VAR':([2,5,6,21,22,23,25,26,27,29,30,32,33,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[20,20,20,-15,-16,20,-4,55,55,55,55,55,-3,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'DP':([3,4,],[21,22,]),'PCOMA':([7,8,9,10,11,12,13,18,24,28,34,35,36,37,38,39,40,41,47,48,49,50,53,54,55,56,80,85,86,89,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,118,120,121,122,123,124,125,],[25,-5,-6,-7,-8,-9,-10,-20,33,-17,-12,-21,-22,-23,-24,-25,-26,-27,-55,-56,-57,-58,-59,-60,-63,-61,-52,-33,-43,-62,-19,-11,-65,-49,-50,-51,-54,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-31,-32,-64,-53,-28,-29,-30,-18,]),'IGUAL':([14,20,31,94,120,],[26,-14,-13,-65,-64,]),'IZQPAR':([15,17,19,26,27,43,51,52,],[27,29,30,44,44,81,87,88,]),'IZQLLAVE':([20,31,55,89,94,120,],[32,60,32,60,-65,-64,]),'RESTA':([26,27,40,47,48,49,50,53,54,55,56,89,94,120,],[42,42,63,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'abs':([26,27,],[43,43,]),'NOT':([26,27,],[45,45,]),'BNOT':([26,27,],[46,46,]),'read':([26,27,],[51,51,]),'array':([26,27,],[52,52,]),'INTEGER':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'DOUBLE':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'STR':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DERPAR':([35,36,37,38,39,40,41,47,48,49,50,53,54,55,56,57,58,59,80,82,83,84,85,86,87,88,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,120,121,122,123,124,],[-21,-22,-23,-24,-25,-26,-27,-55,-56,-57,-58,-59,-60,-63,-61,90,91,92,-52,114,115,116,-33,-43,117,118,-62,-65,-49,-50,-51,-54,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,121,-31,-32,-64,-53,-28,-29,-30,]),'SUMA':([40,47,48,49,50,53,54,55,56,89,94,120,],[62,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'MULTI':([40,47,48,49,50,53,54,55,56,89,94,120,],[64,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'DIV':([40,47,48,49,50,53,54,55,56,89,94,120,],[65,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'AND':([40,47,48,49,50,53,54,55,56,89,94,120,],[66,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'OR':([40,47,48,49,50,53,54,55,56,89,94,120,],[67,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'xor':([40,47,48,49,50,53,54,55,56,89,94,120,],[68,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'DIGUAL':([40,47,48,49,50,53,54,55,56,89,94,120,],[69,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'DESIGUAL':([40,47,48,49,50,53,54,55,56,89,94,120,],[70,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'MAYORIGUAL':([40,47,48,49,50,53,54,55,56,89,94,120,],[71,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'MENORIGUAL':([40,47,48,49,50,53,54,55,56,89,94,120,],[72,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'MAYOR':([40,47,48,49,50,53,54,55,56,89,94,120,],[73,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'MENOR':([40,47,48,49,50,53,54,55,56,89,94,120,],[74,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'BAND':([40,47,48,49,50,53,54,55,56,89,94,120,],[75,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'BOR':([40,47,48,49,50,53,54,55,56,89,94,120,],[76,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'BXOR':([40,47,48,49,50,53,54,55,56,89,94,120,],[77,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'BLEFT':([40,47,48,49,50,53,54,55,56,89,94,120,],[78,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'BRIGHT':([40,47,48,49,50,53,54,55,56,89,94,120,],[79,-55,-56,-57,-58,-59,-60,-63,-61,-62,-65,-64,]),'int':([44,],[82,]),'float':([44,],[83,]),'char':([44,],[84,]),'DERLLAVE':([47,48,49,50,53,54,55,56,61,89,93,94,120,],[-55,-56,-57,-58,-59,-60,-63,-61,94,-62,120,-65,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ltag':([0,],[1,]),'tag':([0,1,],[2,5,]),'linst':([2,5,],[6,23,]),'inst':([2,5,6,23,],[7,7,24,24,]),'asignacion':([2,5,6,23,],[8,8,8,8,]),'iff':([2,5,6,23,],[9,9,9,9,]),'jump':([2,5,6,23,],[10,10,10,10,]),'printt':([2,5,6,23,],[11,11,11,11,]),'ext':([2,5,6,23,],[12,12,12,12,]),'uns':([2,5,6,23,],[13,13,13,13,]),'var2':([2,5,6,23,],[14,14,14,14,]),'arr':([20,55,],[31,89,]),'exp':([26,27,],[34,57,]),'expa':([26,27,],[35,35,]),'expl':([26,27,],[36,36,]),'expra':([26,27,],[37,37,]),'expb':([26,27,],[38,38,]),'casteo':([26,27,],[39,39,]),'E':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[40,40,61,80,85,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,123,124,]),'calls':([26,27,],[41,41,]),'ent':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'dou':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'va':([26,27,29,30,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[49,49,58,59,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'str':([26,27,32,42,45,46,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,114,115,116,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ltag","S'",1,None,None,None),
  ('ltag -> ltag tag linst','ltag',3,'p_lista_tag','gramatica.py',156),
  ('ltag -> tag linst','ltag',2,'p_lista_tag','gramatica.py',157),
  ('linst -> linst inst PCOMA','linst',3,'p_lista_instrucciones','gramatica.py',169),
  ('linst -> inst PCOMA','linst',2,'p_lista_instrucciones','gramatica.py',170),
  ('inst -> asignacion','inst',1,'p_instruccion','gramatica.py',179),
  ('inst -> iff','inst',1,'p_instruccion','gramatica.py',180),
  ('inst -> jump','inst',1,'p_instruccion','gramatica.py',181),
  ('inst -> printt','inst',1,'p_instruccion','gramatica.py',182),
  ('inst -> ext','inst',1,'p_instruccion','gramatica.py',183),
  ('inst -> uns','inst',1,'p_instruccion','gramatica.py',184),
  ('uns -> unset IZQPAR va DERPAR','uns',4,'p_unset','gramatica.py',189),
  ('asignacion -> var2 IGUAL exp','asignacion',3,'p_asignacion','gramatica.py',193),
  ('var2 -> VAR arr','var2',2,'p_var2','gramatica.py',197),
  ('var2 -> VAR','var2',1,'p_var2','gramatica.py',198),
  ('tag -> ID DP','tag',2,'p_tag','gramatica.py',205),
  ('tag -> main DP','tag',2,'p_tag','gramatica.py',206),
  ('jump -> goto ID','jump',2,'p_jump','gramatica.py',210),
  ('iff -> if IZQPAR exp DERPAR goto ID','iff',6,'p_iff','gramatica.py',214),
  ('printt -> print IZQPAR va DERPAR','printt',4,'p_printt','gramatica.py',218),
  ('ext -> exit','ext',1,'p_exxit','gramatica.py',223),
  ('exp -> expa','exp',1,'p_expresion','gramatica.py',227),
  ('exp -> expl','exp',1,'p_expresion','gramatica.py',228),
  ('exp -> expra','exp',1,'p_expresion','gramatica.py',229),
  ('exp -> expb','exp',1,'p_expresion','gramatica.py',230),
  ('exp -> casteo','exp',1,'p_expresion','gramatica.py',231),
  ('exp -> E','exp',1,'p_expresion','gramatica.py',232),
  ('exp -> calls','exp',1,'p_expresion','gramatica.py',233),
  ('casteo -> IZQPAR int DERPAR E','casteo',4,'p_casteo','gramatica.py',239),
  ('casteo -> IZQPAR float DERPAR E','casteo',4,'p_casteo','gramatica.py',240),
  ('casteo -> IZQPAR char DERPAR E','casteo',4,'p_casteo','gramatica.py',241),
  ('calls -> read IZQPAR DERPAR','calls',3,'p_calls','gramatica.py',246),
  ('calls -> array IZQPAR DERPAR','calls',3,'p_calls','gramatica.py',247),
  ('expl -> NOT E','expl',2,'p_expresion_logica','gramatica.py',256),
  ('expl -> E AND E','expl',3,'p_expresion_logica','gramatica.py',257),
  ('expl -> E OR E','expl',3,'p_expresion_logica','gramatica.py',258),
  ('expl -> E xor E','expl',3,'p_expresion_logica','gramatica.py',259),
  ('expra -> E DIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',268),
  ('expra -> E DESIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',269),
  ('expra -> E MAYORIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',270),
  ('expra -> E MENORIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',271),
  ('expra -> E MAYOR E','expra',3,'p_expresion_relacional','gramatica.py',272),
  ('expra -> E MENOR E','expra',3,'p_expresion_relacional','gramatica.py',273),
  ('expb -> BNOT E','expb',2,'p_expresion_bit','gramatica.py',288),
  ('expb -> E BAND E','expb',3,'p_expresion_bit','gramatica.py',289),
  ('expb -> E BOR E','expb',3,'p_expresion_bit','gramatica.py',290),
  ('expb -> E BXOR E','expb',3,'p_expresion_bit','gramatica.py',291),
  ('expb -> E BLEFT E','expb',3,'p_expresion_bit','gramatica.py',292),
  ('expb -> E BRIGHT E','expb',3,'p_expresion_bit','gramatica.py',293),
  ('expa -> E SUMA E','expa',3,'p_expresion_aritmetica','gramatica.py',296),
  ('expa -> E RESTA E','expa',3,'p_expresion_aritmetica','gramatica.py',297),
  ('expa -> E MULTI E','expa',3,'p_expresion_aritmetica','gramatica.py',298),
  ('expa -> RESTA E','expa',2,'p_expresion_aritmetica','gramatica.py',299),
  ('expa -> abs IZQPAR E DERPAR','expa',4,'p_expresion_aritmetica','gramatica.py',300),
  ('expa -> E DIV E','expa',3,'p_expresion_aritmetica','gramatica.py',301),
  ('E -> ent','E',1,'p_expr','gramatica.py',312),
  ('E -> dou','E',1,'p_expr','gramatica.py',313),
  ('E -> va','E',1,'p_expr','gramatica.py',314),
  ('E -> str','E',1,'p_expr','gramatica.py',315),
  ('ent -> INTEGER','ent',1,'p_expInt','gramatica.py',322),
  ('dou -> DOUBLE','dou',1,'p_expDou','gramatica.py',328),
  ('str -> STR','str',1,'p_expStr','gramatica.py',334),
  ('va -> VAR arr','va',2,'p_expVar','gramatica.py',340),
  ('va -> VAR','va',1,'p_expVar','gramatica.py',341),
  ('arr -> arr IZQLLAVE E DERLLAVE','arr',4,'p_arrayL','gramatica.py',349),
  ('arr -> IZQLLAVE E DERLLAVE','arr',3,'p_arrayL','gramatica.py',350),
]
