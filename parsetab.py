
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BAND BLEFT BNOT BOR BRIGHT BXOR DERLLAVE DERPAR DESIGUAL DIGUAL DIV DOUBLE DP ID IGUAL INTEGER IZQLLAVE IZQPAR MAYOR MAYORIGUAL MENOR MENORIGUAL MULTI NOT OR PCOMA PORCENTAJE PUNTERO RESTA STR SUMA SXOR VAR abs array char exit float goto if int main print read unset xors    : ltag\n        ltag : ltag tag linst\n             | tag linst\n     linst       :   linst  inst PCOMA\n                    | inst PCOMA  inst        :   asignacion\n                    |   iff\n                    |   jump\n                    |   printt\n                    |   ext\n                    |   uns\n        uns     :   unset IZQPAR va DERPAR\n    asignacion  :   var2 IGUAL expvar2        :   VAR arr\n                 |   VARtag         :   ID DP\n                    |  main DPjump        :   goto IDiff         :   if IZQPAR exp DERPAR goto IDprintt     :   print IZQPAR va DERPARext     :   exitexp         : expa\n                    | expl\n                    | expra\n                    | expb\n                    | casteo\n                    | E\n                    | calls\n    \n        casteo      : IZQPAR int DERPAR E\n                    | IZQPAR float DERPAR E\n                    | IZQPAR char DERPAR E\n    \n        calls       :  read IZQPAR DERPAR\n                    |  array IZQPAR DERPAR\n    expl        : NOT E\n                    | E AND E\n                    | E OR E\n                    | E xor Eexpra        : E DIGUAL E\n                    | E DESIGUAL E\n                    | E MAYORIGUAL E\n                    | E MENORIGUAL E\n                    | E MAYOR E\n                    | E MENOR Eexpb        : BNOT E\n                    | E BAND E\n                    | E BOR E\n                    | E BXOR E\n                    | E BLEFT E\n                    | E BRIGHT Eexpa        : E SUMA E\n                    | E RESTA E\n                    | E MULTI E\n                    | abs IZQPAR E DERPAR\n                    | E DIV EE           : ent\n                    | dou\n                    | va\n                    | str\n                    | RESTA E\n    \n        ent : INTEGER\n    \n        dou : DOUBLE\n    \n        str : STR\n    \n        va : VAR arr\n            | VAR \n    \n        arr : arr IZQLLAVE E DERLLAVE\n            | IZQLLAVE E DERLLAVE\n    '
    
_lr_action_items = {'ID':([0,2,7,17,24,26,34,120,],[4,4,-3,29,-2,-5,-4,126,]),'main':([0,2,7,24,26,34,],[5,5,-3,-2,-5,-4,]),'$end':([1,2,7,24,26,34,],[0,-1,-3,-2,-5,-4,]),'if':([3,6,7,22,23,24,26,34,],[16,16,16,-16,-17,16,-5,-4,]),'goto':([3,6,7,22,23,24,26,34,91,],[17,17,17,-16,-17,17,-5,-4,120,]),'print':([3,6,7,22,23,24,26,34,],[18,18,18,-16,-17,18,-5,-4,]),'exit':([3,6,7,22,23,24,26,34,],[19,19,19,-16,-17,19,-5,-4,]),'unset':([3,6,7,22,23,24,26,34,],[20,20,20,-16,-17,20,-5,-4,]),'VAR':([3,6,7,22,23,24,26,27,28,30,31,33,34,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[21,21,21,-16,-17,21,-5,56,56,56,56,56,-4,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DP':([4,5,],[22,23,]),'PCOMA':([8,9,10,11,12,13,14,19,25,29,35,36,37,38,39,40,41,42,48,49,50,51,54,55,56,57,81,86,87,90,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,121,122,123,124,125,126,],[26,-6,-7,-8,-9,-10,-11,-21,34,-18,-13,-22,-23,-24,-25,-26,-27,-28,-55,-56,-57,-58,-60,-61,-64,-62,-59,-34,-44,-63,-20,-12,-66,-50,-51,-52,-54,-35,-36,-37,-38,-39,-40,-41,-42,-43,-45,-46,-47,-48,-49,-32,-33,-65,-53,-29,-30,-31,-19,]),'IGUAL':([15,21,32,95,121,],[27,-15,-14,-66,-65,]),'IZQPAR':([16,18,20,27,28,44,52,53,],[28,30,31,45,45,82,88,89,]),'IZQLLAVE':([21,32,56,90,95,121,],[33,61,33,61,-66,-65,]),'abs':([27,28,],[44,44,]),'NOT':([27,28,],[46,46,]),'BNOT':([27,28,],[47,47,]),'RESTA':([27,28,33,41,43,46,47,48,49,50,51,54,55,56,57,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,95,115,116,117,121,],[43,43,43,64,43,43,43,-55,-56,-57,-58,-60,-61,-64,-62,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-59,43,-63,-66,43,43,43,-65,]),'read':([27,28,],[52,52,]),'array':([27,28,],[53,53,]),'INTEGER':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DOUBLE':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'STR':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'DERPAR':([36,37,38,39,40,41,42,48,49,50,51,54,55,56,57,58,59,60,81,83,84,85,86,87,88,89,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,122,123,124,125,],[-22,-23,-24,-25,-26,-27,-28,-55,-56,-57,-58,-60,-61,-64,-62,91,92,93,-59,115,116,117,-34,-44,118,119,-63,-66,-50,-51,-52,-54,-35,-36,-37,-38,-39,-40,-41,-42,-43,-45,-46,-47,-48,-49,122,-32,-33,-65,-53,-29,-30,-31,]),'SUMA':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[63,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'MULTI':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[65,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'DIV':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[66,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'AND':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[67,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'OR':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[68,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'xor':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[69,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'DIGUAL':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[70,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'DESIGUAL':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[71,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'MAYORIGUAL':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[72,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'MENORIGUAL':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[73,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'MAYOR':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[74,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'MENOR':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[75,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'BAND':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[76,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'BOR':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[77,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'BXOR':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[78,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'BLEFT':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[79,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'BRIGHT':([41,48,49,50,51,54,55,56,57,81,90,95,121,],[80,-55,-56,-57,-58,-60,-61,-64,-62,-59,-63,-66,-65,]),'int':([45,],[83,]),'float':([45,],[84,]),'char':([45,],[85,]),'DERLLAVE':([48,49,50,51,54,55,56,57,62,81,90,94,95,121,],[-55,-56,-57,-58,-60,-61,-64,-62,95,-59,-63,121,-66,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'ltag':([0,],[2,]),'tag':([0,2,],[3,6,]),'linst':([3,6,],[7,24,]),'inst':([3,6,7,24,],[8,8,25,25,]),'asignacion':([3,6,7,24,],[9,9,9,9,]),'iff':([3,6,7,24,],[10,10,10,10,]),'jump':([3,6,7,24,],[11,11,11,11,]),'printt':([3,6,7,24,],[12,12,12,12,]),'ext':([3,6,7,24,],[13,13,13,13,]),'uns':([3,6,7,24,],[14,14,14,14,]),'var2':([3,6,7,24,],[15,15,15,15,]),'arr':([21,56,],[32,90,]),'exp':([27,28,],[35,58,]),'expa':([27,28,],[36,36,]),'expl':([27,28,],[37,37,]),'expra':([27,28,],[38,38,]),'expb':([27,28,],[39,39,]),'casteo':([27,28,],[40,40,]),'E':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[41,41,62,81,86,87,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,]),'calls':([27,28,],[42,42,]),'ent':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'dou':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'va':([27,28,30,31,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[50,50,59,60,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'str':([27,28,33,43,46,47,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,115,116,117,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> ltag','s',1,'p_s_tag','gramatica.py',158),
  ('ltag -> ltag tag linst','ltag',3,'p_lista_tag','gramatica.py',163),
  ('ltag -> tag linst','ltag',2,'p_lista_tag','gramatica.py',164),
  ('linst -> linst inst PCOMA','linst',3,'p_lista_instrucciones','gramatica.py',174),
  ('linst -> inst PCOMA','linst',2,'p_lista_instrucciones','gramatica.py',175),
  ('inst -> asignacion','inst',1,'p_instruccion','gramatica.py',184),
  ('inst -> iff','inst',1,'p_instruccion','gramatica.py',185),
  ('inst -> jump','inst',1,'p_instruccion','gramatica.py',186),
  ('inst -> printt','inst',1,'p_instruccion','gramatica.py',187),
  ('inst -> ext','inst',1,'p_instruccion','gramatica.py',188),
  ('inst -> uns','inst',1,'p_instruccion','gramatica.py',189),
  ('uns -> unset IZQPAR va DERPAR','uns',4,'p_unset','gramatica.py',194),
  ('asignacion -> var2 IGUAL exp','asignacion',3,'p_asignacion','gramatica.py',199),
  ('var2 -> VAR arr','var2',2,'p_var2','gramatica.py',203),
  ('var2 -> VAR','var2',1,'p_var2','gramatica.py',204),
  ('tag -> ID DP','tag',2,'p_tag','gramatica.py',211),
  ('tag -> main DP','tag',2,'p_tag','gramatica.py',212),
  ('jump -> goto ID','jump',2,'p_jump','gramatica.py',216),
  ('iff -> if IZQPAR exp DERPAR goto ID','iff',6,'p_iff','gramatica.py',220),
  ('printt -> print IZQPAR va DERPAR','printt',4,'p_printt','gramatica.py',224),
  ('ext -> exit','ext',1,'p_exxit','gramatica.py',229),
  ('exp -> expa','exp',1,'p_expresion','gramatica.py',233),
  ('exp -> expl','exp',1,'p_expresion','gramatica.py',234),
  ('exp -> expra','exp',1,'p_expresion','gramatica.py',235),
  ('exp -> expb','exp',1,'p_expresion','gramatica.py',236),
  ('exp -> casteo','exp',1,'p_expresion','gramatica.py',237),
  ('exp -> E','exp',1,'p_expresion','gramatica.py',238),
  ('exp -> calls','exp',1,'p_expresion','gramatica.py',239),
  ('casteo -> IZQPAR int DERPAR E','casteo',4,'p_casteo','gramatica.py',245),
  ('casteo -> IZQPAR float DERPAR E','casteo',4,'p_casteo','gramatica.py',246),
  ('casteo -> IZQPAR char DERPAR E','casteo',4,'p_casteo','gramatica.py',247),
  ('calls -> read IZQPAR DERPAR','calls',3,'p_calls','gramatica.py',258),
  ('calls -> array IZQPAR DERPAR','calls',3,'p_calls','gramatica.py',259),
  ('expl -> NOT E','expl',2,'p_expresion_logica','gramatica.py',267),
  ('expl -> E AND E','expl',3,'p_expresion_logica','gramatica.py',268),
  ('expl -> E OR E','expl',3,'p_expresion_logica','gramatica.py',269),
  ('expl -> E xor E','expl',3,'p_expresion_logica','gramatica.py',270),
  ('expra -> E DIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',279),
  ('expra -> E DESIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',280),
  ('expra -> E MAYORIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',281),
  ('expra -> E MENORIGUAL E','expra',3,'p_expresion_relacional','gramatica.py',282),
  ('expra -> E MAYOR E','expra',3,'p_expresion_relacional','gramatica.py',283),
  ('expra -> E MENOR E','expra',3,'p_expresion_relacional','gramatica.py',284),
  ('expb -> BNOT E','expb',2,'p_expresion_bit','gramatica.py',299),
  ('expb -> E BAND E','expb',3,'p_expresion_bit','gramatica.py',300),
  ('expb -> E BOR E','expb',3,'p_expresion_bit','gramatica.py',301),
  ('expb -> E BXOR E','expb',3,'p_expresion_bit','gramatica.py',302),
  ('expb -> E BLEFT E','expb',3,'p_expresion_bit','gramatica.py',303),
  ('expb -> E BRIGHT E','expb',3,'p_expresion_bit','gramatica.py',304),
  ('expa -> E SUMA E','expa',3,'p_expresion_aritmetica','gramatica.py',319),
  ('expa -> E RESTA E','expa',3,'p_expresion_aritmetica','gramatica.py',320),
  ('expa -> E MULTI E','expa',3,'p_expresion_aritmetica','gramatica.py',321),
  ('expa -> abs IZQPAR E DERPAR','expa',4,'p_expresion_aritmetica','gramatica.py',322),
  ('expa -> E DIV E','expa',3,'p_expresion_aritmetica','gramatica.py',323),
  ('E -> ent','E',1,'p_expr','gramatica.py',337),
  ('E -> dou','E',1,'p_expr','gramatica.py',338),
  ('E -> va','E',1,'p_expr','gramatica.py',339),
  ('E -> str','E',1,'p_expr','gramatica.py',340),
  ('E -> RESTA E','E',2,'p_expr','gramatica.py',341),
  ('ent -> INTEGER','ent',1,'p_expInt','gramatica.py',351),
  ('dou -> DOUBLE','dou',1,'p_expDou','gramatica.py',357),
  ('str -> STR','str',1,'p_expStr','gramatica.py',363),
  ('va -> VAR arr','va',2,'p_expVar','gramatica.py',369),
  ('va -> VAR','va',1,'p_expVar','gramatica.py',370),
  ('arr -> arr IZQLLAVE E DERLLAVE','arr',4,'p_arrayL','gramatica.py',379),
  ('arr -> IZQLLAVE E DERLLAVE','arr',3,'p_arrayL','gramatica.py',380),
]
